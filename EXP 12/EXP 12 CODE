#include &lt;stdio.h&gt;
void selectionSort(int arr[], int n);
void bubbleSort(int arr[], int n);
void insertionSort(int arr[], int n);
void displayArray(int arr[], int n);

// Selection Sort function
void selectionSort(int arr[], int n) {
int i, j, minIndex, temp;
for (i = 0; i &lt; n - 1; i++) {
minIndex = i;
for (j = i + 1; j &lt; n; j++) {
if (arr[j] &lt; arr[minIndex]) {
minIndex = j;
} }
// Swap the found minimum element with the first element
temp = arr[minIndex];
arr[minIndex] = arr[i];
arr[i] = temp;
}}
// Bubble Sort function
void bubbleSort(int arr[], int n) {
int i, j, temp;
for (i = 0; i &lt; n - 1; i++) {
for (j = 0; j &lt; n - i - 1; j++) {
if (arr[j] &gt; arr[j + 1]) {
// Swap arr[j] and arr[j+1]

temp = arr[j];
arr[j] = arr[j + 1];
arr[j + 1] = temp;
} }}
}

// Insertion Sort function
void insertionSort(int arr[], int n) {
int i, key, j;
for (i = 1; i &lt; n; i++) {
key = arr[i];
j = i - 1;

while (j &gt;= 0 &amp;&amp; arr[j] &gt; key) {
arr[j + 1] = arr[j];
j = j - 1;
}
arr[j + 1] = key;
}
}
void displayArray(int arr[], int n) {
for (int i = 0; i &lt; n; i++) {
printf(&quot;%d &quot;, arr[i]);
}
printf(&quot;\n&quot;);
}
int main() {
int arr[100], n, choice;

printf(&quot;Enter the number of elements in the array: &quot;);
scanf(&quot;%d&quot;, &amp;n);

printf(&quot;Enter the elements of the array: &quot;);
for (int i = 0; i &lt; n; i++) {
scanf(&quot;%d&quot;, &amp;arr[i]);
}

while (1) {
printf(&quot;\nMenu:\n&quot;);
printf(&quot;1. Selection Sort\n&quot;);
printf(&quot;2. Bubble Sort\n&quot;);
printf(&quot;3. Insertion Sort\n&quot;);
printf(&quot;4. Exit\n&quot;);
printf(&quot;Enter your choice: &quot;);
scanf(&quot;%d&quot;, &amp;choice);

switch (choice) {
case 1:
selectionSort(arr, n);
printf(&quot;Array after Selection Sort: &quot;);
displayArray(arr, n);
break;
case 2:
bubbleSort(arr, n);
printf(&quot;Array after Bubble Sort: &quot;);
displayArray(arr, n);
break;
case 3:

insertionSort(arr, n);
printf(&quot;Array after Insertion Sort: &quot;);
displayArray(arr, n);
break;
case 4:
printf(&quot;Exiting...\n&quot;);
return 0;
default:
printf(&quot;Invalid choice, please try again.\n&quot;);
}
}
return 0;
}
